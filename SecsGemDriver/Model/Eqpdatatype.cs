/*
 * C# class for entity table eqpdatatype 
 * Created on 18 Jan 2018 ( Date ISO 2018-01-18 - Time 19:47:35 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 * template update by NEO
 */
using System;
using System.Data;
using System.Collections.Generic;
using System.Linq;

using System.Text;
using MySql.Data;
using MySql.Data.MySqlClient;
using System.Reflection;
using log4net;

/**
 * Entity bean for table "eqpdatatype"
 * 
 * @author Telosys Tools Generator
 *
 */
namespace SecsGemDriver
{
    public class Eqpdatatype
    {
        //Declare an instance for log4net
        private static readonly ILog Log = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        public int ed_type { get; set; }

        public string ed_name { get; set; }
        public string ed_desc { get; set; }
        public int sts { get; set; }

        public Eqpdatatype()
        {
        }

        /*
         * CRUD functions
         */
        public static List<Eqpdatatype> load()
        {
            return load("");
        }
        public static List<Eqpdatatype> load(string query)
        {
            List<Eqpdatatype> list = new List<Eqpdatatype>();
            MySqlDataReader rd = null;
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return list;
                }
                if (query == null || query.Length == 0)
                {
                    query = "select * from eqpdatatype";
                }
                Log.Info("Query: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);

                rd = cmd.ExecuteReader();

                while (rd.Read())
                {
                    Eqpdatatype obj = new Eqpdatatype();
                    obj.ed_type = Convert.ToInt32(rd["ed_type"].ToString());   // Primary
                    obj.ed_name = rd["ed_name"].ToString();
                    obj.ed_desc = rd["ed_desc"].ToString();
                    obj.sts = Convert.ToInt32(rd["sts"].ToString());
                    list.Add(obj);
                }
                rd.Close();
            }
            catch (MySqlException e)
            {
                Log.Error("Error: " + e.Message);
            }
            finally
            {
                if (rd != null)
                {
                    rd.Close();
                }
            }
            return list;
        }
        public void query(string query)
        {
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return;
                }
                Log.Info("Query: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                // Log file
                Int32 unixTimestamp = (Int32)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;
                string queryLog = "insert into action_log(log_text, log_time, user_id) values('" + query + "','" + unixTimestamp + "','" + Main.getUserId() + "')";
                MySqlCommand cmdLog = new MySqlCommand(queryLog, conn);
                cmdLog.ExecuteNonQuery();
                // End logfile
            }
            catch (MySqlException e)
            {
                Log.Error("Error: " + e.Message);
            }

            return;
        }

        public static Eqpdatatype load(int ed_type)
        {
            MySqlDataReader rd = null;
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return null;
                }
                string query = "select * from eqpdatatype where ed_type='" + ed_type + "'";
                Log.Info("Query: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);

                rd = cmd.ExecuteReader();
                Eqpdatatype obj = new Eqpdatatype();

                while (rd.Read())
                {
                    obj.ed_type = Convert.ToInt32(rd["ed_type"].ToString());   // Primary
                    obj.ed_name = rd["ed_name"].ToString();
                    obj.ed_desc = rd["ed_desc"].ToString();
                    obj.sts = Convert.ToInt32(rd["sts"].ToString());
                    break;
                }
                rd.Close();

                return obj;
            }
            catch (MySqlException e)
            {
                Log.Error("Query: " + e.Message);
            }
            finally
            {
                if (rd != null)
                {
                    rd.Close();
                }
            }
            return null;
        }


        public String toString()
        {
            String strData = "eqpdatatype "
                    + " ed_type = " + ed_type + "; ed_name = " + ed_name
                    + "; ed_desc = " + ed_desc
                    + "; sts = " + sts
                    ;
            return strData;
        }

        public void insert()
        {
            //
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return;
                }
                string query = "insert into eqpdatatype(" +
                                    "ed_name," +
                                    "ed_desc," +
                                    "sts" +
" )values (" +
                                    "'" + ed_name + "'," +
                                    "'" + ed_desc + "'," +
                                    "'" + sts + "'" +
" )";
                Log.Info("INSERT: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                this.ed_type = (int)cmd.LastInsertedId;
                // Log file
                Int32 unixTimestamp = (Int32)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;
                string log_text = "Create new eqpdatatype. ID=" + this.ed_type;
                string queryLog = "insert into action_log(log_text, log_time, user_id) values('" + log_text + "','" + unixTimestamp + "','" + Main.getUserId() + "')";
                MySqlCommand cmdLog = new MySqlCommand(queryLog, conn);
                cmdLog.ExecuteNonQuery();
                // End logfile
            }
            catch (MySqlException e)
            {
                Log.Error("Error: " + e.Message);
            }
        }

        public void update()
        {
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return;
                }
                string query = "update eqpdatatype set " +
                                "ed_name='" + ed_name + "' ," +
                                "ed_desc='" + ed_desc + "' ," +
                                "sts='" + sts + "' " +

" where " +
"ed_type='" + ed_type + "'";
                Log.Info("UPDATE: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                // Log file
                Int32 unixTimestamp = (Int32)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;
                string log_text = "Update value eqpdatatype. ID=" + this.ed_type;
                string queryLog = "insert into action_log(log_text, log_time, user_id) values('" + log_text + "','" + unixTimestamp + "','" + Main.getUserId() + "')";
                MySqlCommand cmdLog = new MySqlCommand(queryLog, conn);
                cmdLog.ExecuteNonQuery();
                // End logfile
            }
            catch (MySqlException e)
            {
                Log.Error("Error: " + e.Message);
            }

        }


        public void delete()
        {
            //
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return;
                }
                string query = "update eqpdatatype set STS=3 " +
" where " +
"ed_type='" + ed_type + "'";
                Console.WriteLine("DELETE: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                // Log file
                Int32 unixTimestamp = (Int32)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;
                string log_text = "Update value eqpdatatype. ID=" + this.ed_type;
                string queryLog = "insert into action_log(log_text, log_time, user_id) values('" + log_text + "','" + unixTimestamp + "','" + Main.getUserId() + "')";
                MySqlCommand cmdLog = new MySqlCommand(queryLog, conn);
                cmdLog.ExecuteNonQuery();
            }
            catch (MySqlException e)
            {
                Log.Error("Error: " + e.Message);
            }
        }

        public void deleteRow()
        {
            //
            try
            {
                MySqlConnection conn = Main.getConnection();
                if (conn == null)
                {
                    return;
                }
                string query = "delete from eqpdatatype " +
" where " +
"ed_type='" + ed_type + "'";
                Log.Info("DELETE: " + query);
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.ExecuteNonQuery();
                // Log file
                Int32 unixTimestamp = (Int32)(DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;
                string log_text = "Delete row eqpdatatype. ID=" + this.ed_type;
                string queryLog = "insert into action_log(log_text, log_time, user_id) values('" + log_text + "','" + unixTimestamp + "','" + Main.getUserId() + "')";
                MySqlCommand cmdLog = new MySqlCommand(queryLog, conn);
                cmdLog.ExecuteNonQuery();
            }
            catch (MySqlException e)
            {
                Log.Error("Error: " + e.Message);
            }
        }

        public Eqpdatatype(System.Windows.Forms.DataGridViewRow row)
        {
            getFromRow(row);
        }

        public void getFromRow(System.Windows.Forms.DataGridViewRow row)
        {
            ed_type = Convert.ToInt32(row.Cells["ed_type"].Value.ToString());

            ed_name = row.Cells["ed_name"].Value.ToString();
            ed_desc = row.Cells["ed_desc"].Value.ToString();
            sts = Convert.ToInt32(row.Cells["sts"].Value.ToString());
        }

        public static DataTable loadDt(string query)
        {
            List<Eqpdatatype> list = load(query);
            return ListToDataTable(list);
        }

        public static DataTable loadDt()
        {
            List<Eqpdatatype> list = load("");
            return ListToDataTable(list);
        }

        public static DataTable ListToDataTable<T>(List<T> items)
        {

            DataTable dataTable = new DataTable(typeof(T).Name);

            //Get all the properties

            PropertyInfo[] Props = typeof(T).GetProperties(BindingFlags.Public | BindingFlags.Instance);

            foreach (PropertyInfo prop in Props)
            {

                //Setting column names as Property names

                dataTable.Columns.Add(prop.Name);

            }

            foreach (T item in items)
            {

                var values = new object[Props.Length];

                for (int i = 0; i < Props.Length; i++)
                {

                    //inserting property values to datatable rows

                    values[i] = Props[i].GetValue(item, null);

                }

                dataTable.Rows.Add(values);

            }

            //put a breakpoint here and check datatable

            return dataTable;

        }

    }
}